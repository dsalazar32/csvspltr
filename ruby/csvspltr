#!/usr/bin/env ruby
require 'thor'
require 'csv'
require 'pry'

class Csvspltr < Thor
  desc "splt FILE", "paginates csvs"
  long_desc <<-LONGDESC 
    `csvspltr splt FILE` will split up a csv document into 
     \x5multiple documents based on a limit of (n) rows.
     \x5 
     \x5The default amount of rows is: 1,048,575
  LONGDESC
  def splt(file)
    begin
      pages, page = [], []
      perpg   = 6014
      horizon = perpg
      File.open(file, 'r') do |fbuf|
        fbuf.each do |line|
          lineno = fbuf.lineno
          page << line.gsub("\r\n", "")
          if lineno == horizon
            pages << page; page = []
            horizon = perpg * (pages.length + 1)
          end
        end
      end
    rescue Errno::ENOENT => e
      puts "#{e.message}"
    end
  end
end

Csvspltr.start(ARGV)

# desc 'Turn large files into a group of smaller ones'
# task :page_it, [:file, :lines] do |t, args|
#   count = 0 
#   csvpath = args[:file]
#   filepath = "#{File.dirname(csvpath)}/paged"
#   filename, ext = File.basename(csvpath).split('.')
#   FileUtils.mkdir_p(filepath)
#   CSV.open(csvpath).each_slice(args[:lines].to_i) do |batch|
#     count = count + 1
#     file = "#{filename}_%002d.#{ext}" % count
#     CSV.open(File.join(filepath, file), "wb") do |csv|
#       batch.each do |row|
#         puts row
#         csv << row
#       end
#     end
#   end
# end
#
